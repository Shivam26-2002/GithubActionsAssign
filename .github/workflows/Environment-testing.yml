name: Environment Testing
on: 
  workflow_call:
    inputs:
      environment:
        type: string
    outputs:
      reviewed:
        description: "Output to check if the job was approved"
        value: ${{ jobs.wait_for_approval.outputs.reviewed }}
jobs:
  wait_for_approval:    
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}   # approval environment
    outputs: 
      reviewed: ${{ steps.set-output-deployment.outputs.reviewed }}    
    steps:
    - name: Deployment approved
      id: set-output-deployment
      run: |
        echo 'Deployment approved'
        echo "reviewed=true" >> $GITHUB_OUTPUT
    
        
  cicd:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    outputs: 
      JOB-OUTPUT: ${{ steps.set-output.outputs.JOB-OUTPUT }}
    steps:
      - name: Dummy step
        run: echo "Hello World"
      - name: Dummy step
        env:
         prod_one_result: 'Prod one result'
         prod_two_result: 'Prod two result'
        run: echo "Dummy step"
        
      - name: Set output of job
        id: set-output
        if: always()
        env:
         JOB_STATUS: ${{ job.status }}
        run: |
          echo "$JOB_STATUS"
          echo "JOB-OUTPUT=$JOB_STATUS" >> "$GITHUB_OUTPUT"
          echo "env.$prod_one_result"
          echo env.$prod_one_result

  
  slack-failure:
    runs-on: ubuntu-latest
    needs: [wait_for_approval,cicd]
    if: ${{ ( success('cicd') && needs.wait_for_approval.outputs.reviewed == 'true' ) || ( failure('cicd') && needs.wait_for_approval.outputs.reviewed == 'true' ) }}    
    # if: ${{ ( success('cicd')  &&  needs.wait_for_approval.outputs.reviewed = 'true') || ( failure('deploy-to-prod-two')  &&  needs.deploy-to-prod-two.outputs.reviewed != 'true') }}    
    steps:
      - name: Run slack failure
        run: |
          echo "${{ needs.cicd.outputs.JOB-OUTPUT }}"
        
