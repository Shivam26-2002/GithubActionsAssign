name: Get Step URL
on: push
# on: workflow_dispatch
jobs:
  getURL:
    runs-on: ubuntu-latest
    steps:
      - name: Output
        id: dummy-output
        run: |
          echo "NAME=Shivam" >> "$GITHUB_OUTPUT"
          export NAME
          echo "$NAME"

      - name: Print output
        run: echo ${{ steps.dummy-output.outputs.NAME }}
          
      - name: Step 1
        id: unit-test
        run: |
          echo "Pull request link"
          echo ${{ github.event.pull_request.comments_url }}
        
      - name: Step 2
        id: e2e-test
        run: echo "Hello"
        # run: exit 1

      - name: IF else optimise
        if: always()
        run: |
          search_term=nx-ole
          # [[ ${{ steps.unit-test.outcome }} == 'failure' ]] && echo "Unit Test failed for $search_term : ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY || echo "## All Unit tests passed" >> $GITHUB_STEP_SUMMARY
          # [[ ${{ steps.e2e-test.outcome }} == 'failure' ]] && echo "End to End Test failed for $app : ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY || [[ ${{ steps.e2e-test.outcome }} == 'skipped' ]] && echo "## End to End Test skipped" >> $GITHUB_STEP_SUMMARY || echo "## All End to End tests passed" >> $GITHUB_STEP_SUMMARY
          [[ ${{ steps.unit-test.outcome }} == 'failure' ]] && echo "Unit Test failed for ${{ inputs.vercel_project_name }} ❌ : ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY || ([[ ${{ steps.unit-test.outcome }} == 'skipped' ]] && echo "## Unit Test skipped for ${{ inputs.vercel_project_name }} ↩️ " >> $GITHUB_STEP_SUMMARY && exit 0) || echo "## All Unit tests passed ✅" >> $GITHUB_STEP_SUMMARY
          [[ ${{ steps.e2e-test.outcome }} == 'failure' ]] && \
          echo "End to End Test failed for $app : ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_STEP_SUMMARY || \
          [[ ${{ steps.e2e-test.outcome }} == 'skipped' ]] && \
          echo "## End to End Test skipped" >> $GITHUB_STEP_SUMMARY || \
          echo "## All End to End tests passed" >> $GITHUB_STEP_SUMMARY


        
      # - name: Step 2
      #   run: echo "World"
      # - name: Step 3
      #   run: echo "Hello"
      - name: Run always
        id: get-job-id
        if: always()
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          jobs=$(gh api repos/${{ github.repository }}/actions/runs/${{ github.run_id}}/attempts/${{ github.run_attempt }}/jobs)
          echo $jobs
          job_id=$(echo "$jobs" | jq -r '.jobs[] | select(.name == "getURL") | .id')
          # job_id=$(echo $jobs | jq -r '.jobs[] | select(.runner_name=="${{ runner.name }}") | .id')
          # job_id=$(echo "$jobs" | grep -oP '"id":\K\d+' | head -1)
          echo "job_id is: $job_id"
          echo "job_id=$job_id" >> $GITHUB_OUTPUT
          
          # jobs=$(gh api repos/${{ github.repository }}/actions/runs/${{ github.run_id}}/attempts/${{ github.run_attempt }}/jobs)
          # job_id=$(echo "$jobs" | grep -oP '(?<="id":")[^"]*(?=","runner_name":"${{ runner.name }}")')
          # echo "job_id is: $job_id"
          # echo "job_id=$job_id" >> $GITHUB_OUTPUT

      - name: Get URL
        if: failure()
        run: |
          echo Job ID: ${{ steps.get-job-id.outputs.job_id }}
          # echo "Failed step URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}#${{ github.job }}/${{ github.step }}"
          # echo "Failed step occurred in job: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}#${{ github.job }}/${{ github.run_number }}"
          echo "Failed step occurred in job: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ steps.get-job-id.outputs.job_id }}" >> $GITHUB_STEP_SUMMARY
